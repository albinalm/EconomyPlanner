@inject NavigationManager NavManager
@using EconomyPlanner.Web.Services.Interfaces
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand bi bi-file-ruled-fill mt-1 mb-1 ml-1 mr-1" href=""> Alms budgetkalkylator</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Ekonomisk översikt
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="expenses">
                <span class="oi bi-cash-coin" aria-hidden="true"></span> Utgifter
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="incomes">
                <span class="oi bi-cash-stack" aria-hidden="true"></span> Inkomster
            </NavLink>
        </div>
        <div class="nav-item px-3">
            @if (!IsLoggedIn)
            {
                <NavLink class="nav-link" href="login">
                    <span class="oi oi-account-login" aria-hidden="true"></span> Logga in
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link" @onclick="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Logga ut
                </NavLink>
            }
        </div>
    </nav>
</div>

@code {

    [Inject]
    private IHouseholdService HouseholdService { get; set; }

    private bool IsLoggedIn { get; set; }
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;


    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public async Task CheckForLogin()
    {
        if (await HouseholdService.HasSavedLogin())
        {
            if (await HouseholdService.AttemptLogin(await HouseholdService.GetGuid()))
            {
                IsLoggedIn = true;
            }
        }
    }

    private async Task Logout()
    {
        await HouseholdService.Logout();
        IsLoggedIn = false;
        NavManager.NavigateTo("/login");
    }

    protected override async Task OnInitializedAsync()
    {
        await CheckForLogin();
    }

}