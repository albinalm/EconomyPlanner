@page "/"
@using System.Globalization
<HxGrid TItem="CultureInfo" MultiSelectionEnabled="true" Responsive="true" @bind-SelectedDataItems="selectedCultureInfos" DataProvider="ClientSideProcessingDataProvider" PageSize="10" @ref="grid" InProgress="@inProgress">
    <Columns>
        <HxGridColumn HeaderText="LCID" ItemTextSelector="@(item => item.LCID.ToString())" SortKeySelector="@(item => item.LCID)" IsDefaultSortColumn="true" />
        <HxGridColumn HeaderText="DisplayName" ItemTextSelector="@(item => item.DisplayName)" SortKeySelector="@(item => item.DisplayName)" />
        <HxGridColumn HeaderText="Name" ItemTextSelector="@(item => item.Name)" SortKeySelector="@(item => item.Name)" />
        <HxGridColumn HeaderText="EnglishName" ItemTextSelector="@(item => item.EnglishName)" SortKeySelector="@(item => item.EnglishName)" />
        <HxContextMenuGridColumn Context="item">
            <HxContextMenu>
                <HxContextMenuItem Text="Delete" Icon="BootstrapIcon.Trash" OnClick="() => DeleteItem(item)" />
            </HxContextMenu>
        </HxContextMenuGridColumn>
    </Columns>
</HxGrid>
<HxButton Text="Refresh data" OnClick="HandleButtonClick" Color="ThemeColor.Primary" />
@code {
    private HashSet<CultureInfo> selectedCultureInfos = new();
    private List<CultureInfo> localCultureInfos = CultureInfo.GetCultures(CultureTypes.AllCultures).ToList();
    private HxGrid<CultureInfo> grid;

    private Task<GridDataProviderResult<CultureInfo>> ClientSideProcessingDataProvider(GridDataProviderRequest<CultureInfo> request)
    {
        return Task.FromResult(request.ApplyTo(localCultureInfos));
    }

    private async Task DeleteItem(CultureInfo item)
    {
        localCultureInfos.Remove(item);
        await grid.RefreshDataAsync();
    }
    private async Task HandleButtonClick()
    {
        inProgress = true;
        await Task.Delay(3000);
        await grid.RefreshDataAsync();
        inProgress = false;
    }
    
    private bool inProgress = false;
}